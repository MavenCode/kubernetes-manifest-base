apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: aws-sqs
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: aws-sqs
      eventSourceName: aws-sqs
      eventName: bucket-file
  triggers:
    - template:
        name: bucket-file
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: replace-me-
              spec:
                podGC:
                  strategy: OnWorkflowSuccess
                serviceAccountName: argo-events-sa
                entrypoint: main
                synchronization:
                  semaphore:
                    configMapKeyRef:
                      name: bucket-file-sync
                      key: workflow
                arguments:
                  parameters:
                    - name: message
                      value: replace-me
                imagePullSecrets:
                  - name: ecr-creds
                templates:
                  - name: main
                    inputs:
                      parameters:
                        - name: message
                    steps:
                      - - name: classification
                          template: classification
                          arguments:
                            parameters:
                              - name: source_path
                                value: "{{inputs.parameters.message}}"
                      - - name: clean-raw-output
                          template: clean-raw-output
                          arguments:
                            parameters:
                              - name: raw_output
                                value: "{{steps.classification.outputs.result}}"
                      - - name: evaluation-1
                          template: evaluation
                          when: "{{steps.clean-raw-output.outputs.result}} == 1"
                          arguments:
                            parameters:
                              - name: source_path
                                value: "{{inputs.parameters.message}}"
                              - name: image
                                value: replace-me
                  - name: clean-raw-output
                    inputs:
                      parameters:
                        - name: raw_output
                    script:
                      image: python:alpine3.6
                      command: [python]
                      source: |
                        raw_output = """
                        {{inputs.parameters.raw_output}}
                        """
                        print(raw_output.strip().split('\n')[-1])
                  - name: classification
                    inputs:
                      parameters:
                        - name: source_path
                    container:
                      image: $ECR_REGISTRY/replace-me:latest
                      imagePullPolicy: Always
                      envFrom:
                        - configMapRef:
                            name: workflow-env
                      command:
                        - 'python'
                        - 'classification.py'
                      args:
                        - '--source_path=s3://$BUCKET_NAME/{{inputs.parameters.source_path}}'
                      resources:
                        limits:
                          memory: 1024Mi
                          cpu: 200m
                    sidecars:
                      - name: tika
                        image: docker.io/apache/tika:1.27
                  - name: evaluation
                    inputs:
                      parameters:
                        - name: source_path
                        - name: image
                    container:
                      image: "{{inputs.parameters.image}}"
                      imagePullPolicy: Always
                      envFrom:
                        - configMapRef:
                            name: workflow-env
                      args:
                        - '--source_path=s3://$BUCKET_NAME/{{inputs.parameters.source_path}}'
                      resources:
                        limits:
                          memory: 1024Mi
                          cpu: 200m
                    sidecars:
                      - name: tika
                        image: docker.io/apache/tika:1.27
          parameters:
            - src:
                dependencyName: aws-sqs
                dataKey: body.Records.0.s3.object.key
              dest: spec.arguments.parameters.0.value